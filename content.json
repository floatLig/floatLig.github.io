{"meta":{"title":"floatLig的博客","subtitle":"❤️既然已选择，不如去热爱","description":null,"author":"昨晚的咖啡","url":"http://yoursite.com"},"posts":[{"title":"test","slug":"test","date":"2019-10-08T15:46:55.000Z","updated":"2019-10-08T15:46:55.181Z","comments":true,"path":"2019/10/08/test/","link":"","permalink":"http://yoursite.com/2019/10/08/test/","excerpt":"","text":"","raw":null,"content":null,"categories":[],"tags":[]},{"title":"重装系统win10后的配置","slug":"win10配置","date":"2019-10-06T09:53:52.000Z","updated":"2019-10-08T17:13:58.204Z","comments":true,"path":"2019/10/06/win10配置/","link":"","permalink":"http://yoursite.com/2019/10/06/win10配置/","excerpt":"\n\n\n安装软件 + 更改系统配置\n文件夹管理 + 系统配置\n软件安装\nPureVpn\n谷歌浏览器\n谷歌访问助手安装\n\n\nBandizip\nvscode\nGit\njdk\nMysql\nnodePad++\nSnipaste\nEverything\nTrafficMonitor\n欧陆词典\nIntelliJ IDEA\nMindmanager\nUbuntu子系统\nPotPlayer\n开始菜单栏的路径\nOffice\nAdobe\nVMware\n个人软件全家图\n\n\n\n\n\n","text":"安装软件 + 更改系统配置 文件夹管理 + 系统配置 软件安装 PureVpn 谷歌浏览器 谷歌访问助手安装 Bandizip vscode Git jdk Mysql nodePad++ Snipaste Everything TrafficMonitor 欧陆词典 IntelliJ IDEA Mindmanager Ubuntu子系统 PotPlayer 开始菜单栏的路径 Office Adobe VMware 个人软件全家图 安装软件 + 更改系统配置 首先，更改桌面、图片、文档等的位置，更换方式为：“右键–属性–位置” 更改位置后，就可以将安装包先下载到桌面，然后在下载的时候进行文件夹管理和系统配置 文件夹管理 + 系统配置文件夹管理的首要原则是： 留下有用的，删掉没用的 容易找到你想要的文件 参考链接：https://www.zhihu.com/question/19901022 以下是win10的文件夹管理： 然后就边下载软件边进行win10的设置 软件安装PureVpn https://pan.baidu.com/s/1CoMboAosLA9eINRRQHZV4g 独立IP设置 设置-选择模式-独立IP se2-cn.sslwonders.com ch2-cn.sslwonders.com my2-cn.sslwonders.com lu2-cn.sslwonders.com fr2-cn.sslwonders.com 谷歌浏览器谷歌浏览器没有中文版和英文版的区别，在“设置-语言”中可以更换成中文 谷歌访问助手安装 https://pan.baidu.com/s/1x_MCupeNYxdVJNmdlRWaYw 如果在谷歌浏览器中添加插件有错误，查看解决方法：https://blog.csdn.net/wst0717/article/details/88867047 Bandizip https://cn.bandisoft.com/bandizip/ 设置 常规设置-在压缩文件中显示[..]目录：× 上下文菜单-选择解压菜单-添加到“解压到…”：√ 上下文菜单-选择压缩菜单-添加到“压缩文件名.zip”：√ 上下文菜单-选择右键菜单-新建文件夹：√ vscodeGit https://gitforwindows.org 安装Git：https://blog.csdn.net/qq_32786873/article/details/80570783 jdk https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html 配置环境变量: https://jingyan.baidu.com/article/870c6fc373aacbb03fe4bea8.html Mysql https://dev.mysql.com/downloads/installer/ 安装说明 https://zhuanlan.zhihu.com/p/37152572 one more product requirements have not been satisified解决方法 https://blog.csdn.net/m0_37860933/article/details/81981663 nodePad++ https://notepad-plus-plus.org/downloads/ Snipaste https://zh.snipaste.com/ Everything https://www.voidtools.com/zh-cn/ TrafficMonitorTrafficMonitor是CPU、内存、上传下载速度的监控软件 https://github.com/zhongyang219/TrafficMonitor/releases 首选项设置： 常规-开机启动 截屏-显示-边框颜色：0像素 截屏-显示-显示描点：× 输出-文件-手动保存：_$yyyy-MM-dd_HH-mm-ss$.png 输出-文件-自动保存：√ 控制-全部快捷键：F9 欧陆词典 https://www.eudic.net/v4/en/app/download IntelliJ IDEA https://www.jetbrains.com/idea/ Mindmanager https://pan.baidu.com/s/12l_CRCHh-sTEME-CHEpqEQ Ubuntu子系统详细安装步骤：https://zhuanlan.zhihu.com/p/62658094 PotPlayer https://daumpotplayer.com/download/ 开始菜单栏的路径 C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs OfficeAdobeVMware win10-1903版本需要在官网下载最新的VMware15.5版本以上才可以正常使用。 注册码为：YZ380-0WG50-M891Z-9DNQ9-MPA90 或者 AC5D0-21EE3-M80AY-X6ZZC-PPHC6 或者 GC54U-4XE05-M884Z-24MZT-P6RFF 个人软件全家图","raw":null,"content":null,"categories":[],"tags":[{"name":"博客","slug":"博客","permalink":"http://yoursite.com/tags/博客/"}]},{"title":"重装系统win10后的配置","slug":"重装系统win10后的配置","date":"2019-10-06T09:53:52.000Z","updated":"2019-10-08T17:13:58.203Z","comments":true,"path":"2019/10/06/重装系统win10后的配置/","link":"","permalink":"http://yoursite.com/2019/10/06/重装系统win10后的配置/","excerpt":"\n\n\n安装软件 + 更改系统配置\n文件夹管理 + 系统配置\n软件安装\nPureVpn\n谷歌浏览器\n谷歌访问助手安装\n\n\nBandizip\nvscode\nGit\njdk\nMysql\nnodePad++\nSnipaste\nEverything\nTrafficMonitor\n欧陆词典\nIntelliJ IDEA\nMindmanager\nUbuntu子系统\nPotPlayer\n开始菜单栏的路径\nOffice\nAdobe\nVMware\n个人软件全家图\n\n\n\n\n\n","text":"安装软件 + 更改系统配置 文件夹管理 + 系统配置 软件安装 PureVpn 谷歌浏览器 谷歌访问助手安装 Bandizip vscode Git jdk Mysql nodePad++ Snipaste Everything TrafficMonitor 欧陆词典 IntelliJ IDEA Mindmanager Ubuntu子系统 PotPlayer 开始菜单栏的路径 Office Adobe VMware 个人软件全家图 安装软件 + 更改系统配置 首先，更改桌面、图片、文档等的位置，更换方式为：“右键–属性–位置” 更改位置后，就可以将安装包先下载到桌面，然后在下载的时候进行文件夹管理和系统配置 文件夹管理 + 系统配置文件夹管理的首要原则是： 留下有用的，删掉没用的 容易找到你想要的文件 参考链接：https://www.zhihu.com/question/19901022 以下是win10的文件夹管理： 然后就边下载软件边进行win10的设置 软件安装PureVpn https://pan.baidu.com/s/1CoMboAosLA9eINRRQHZV4g 独立IP设置 设置-选择模式-独立IP se2-cn.sslwonders.com ch2-cn.sslwonders.com my2-cn.sslwonders.com lu2-cn.sslwonders.com fr2-cn.sslwonders.com 谷歌浏览器谷歌浏览器没有中文版和英文版的区别，在“设置-语言”中可以更换成中文 谷歌访问助手安装 https://pan.baidu.com/s/1x_MCupeNYxdVJNmdlRWaYw 如果在谷歌浏览器中添加插件有错误，查看解决方法：https://blog.csdn.net/wst0717/article/details/88867047 Bandizip https://cn.bandisoft.com/bandizip/ 设置 常规设置-在压缩文件中显示[..]目录：× 上下文菜单-选择解压菜单-添加到“解压到…”：√ 上下文菜单-选择压缩菜单-添加到“压缩文件名.zip”：√ 上下文菜单-选择右键菜单-新建文件夹：√ vscodeGit https://gitforwindows.org 安装Git：https://blog.csdn.net/qq_32786873/article/details/80570783 jdk https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html 配置环境变量: https://jingyan.baidu.com/article/870c6fc373aacbb03fe4bea8.html Mysql https://dev.mysql.com/downloads/installer/ 安装说明 https://zhuanlan.zhihu.com/p/37152572 one more product requirements have not been satisified解决方法 https://blog.csdn.net/m0_37860933/article/details/81981663 nodePad++ https://notepad-plus-plus.org/downloads/ Snipaste https://zh.snipaste.com/ Everything https://www.voidtools.com/zh-cn/ TrafficMonitorTrafficMonitor是CPU、内存、上传下载速度的监控软件 https://github.com/zhongyang219/TrafficMonitor/releases 首选项设置： 常规-开机启动 截屏-显示-边框颜色：0像素 截屏-显示-显示描点：× 输出-文件-手动保存：_$yyyy-MM-dd_HH-mm-ss$.png 输出-文件-自动保存：√ 控制-全部快捷键：F9 欧陆词典 https://www.eudic.net/v4/en/app/download IntelliJ IDEA https://www.jetbrains.com/idea/ Mindmanager https://pan.baidu.com/s/12l_CRCHh-sTEME-CHEpqEQ Ubuntu子系统详细安装步骤：https://zhuanlan.zhihu.com/p/62658094 PotPlayer https://daumpotplayer.com/download/ 开始菜单栏的路径 C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs OfficeAdobeVMware win10-1903版本需要在官网下载最新的VMware15.5版本以上才可以正常使用。 注册码为：YZ380-0WG50-M891Z-9DNQ9-MPA90 或者 AC5D0-21EE3-M80AY-X6ZZC-PPHC6 或者 GC54U-4XE05-M884Z-24MZT-P6RFF 个人软件全家图","raw":null,"content":null,"categories":[],"tags":[{"name":"博客","slug":"博客","permalink":"http://yoursite.com/tags/博客/"}]},{"title":"谈谈maven","slug":"谈谈maven","date":"2019-10-02T08:55:53.000Z","updated":"2019-10-08T17:13:58.205Z","comments":true,"path":"2019/10/02/谈谈maven/","link":"","permalink":"http://yoursite.com/2019/10/02/谈谈maven/","excerpt":"","text":"Maven概述Maven的概念Maven项目对象模型（POM），可以通过一小段描述信息来管理项目的构建，报告和文档的项目管理工具软件。 Maven在犹太语中的意思为：知识的积累。","raw":null,"content":null,"categories":[],"tags":[{"name":"博客","slug":"博客","permalink":"http://yoursite.com/tags/博客/"}]},{"title":"MySQL数据库","slug":"MySQL数据库","date":"2019-10-01T07:38:25.000Z","updated":"2019-10-08T17:13:58.204Z","comments":true,"path":"2019/10/01/MySQL数据库/","link":"","permalink":"http://yoursite.com/2019/10/01/MySQL数据库/","excerpt":"\n","text":"最常用命令 一、数据库概述 二、数据库的安装与配置 安装 配置 登录Mysql 卸载 修改密码 三、sql概述 四、Sql的分类 4.1 DDL(create、 alter、 drop):操作数据库、表、列等 4.1.1操作数据库 4.1.2操作数据表 4.2 DML操作(重要) 4.2.1插入操作：INSERT: 4.2.2 修改操作 UPDATE: 4.3 DQL操作 最常用命令123456789101112show databases;use 表名;Show tables;desc 表名； //查看表结构对于表的增删改查：有table - alter -&gt; add / drop / modify / change对于列和元组的增删改：没有table - insert into - delete from - alter set - select- from | where | group by | having | order by 需要注意： ‘’ 和 null 不一样 一、数据库概述 数据（DataBase，DB）：指长期保存在计算机的存储设备上，按照一定规则组织起来，可以被各种用户或应用共享的数据集合。(文件系统) 数据库管理系（DataBase Management System，DBMS）：指一种操作和管理数据库的大型软件，用于建立、使用和维护数据库，对数据库进行统一管理和控制，以保证数据库的安全性和完整性。用户通过数据库管理系统访问数据库中的数据。 数据库软件应该为数据库管理系统，数据库是通过数据库管理系统创建和操作的。 数据库：存储、维护和管理数据的集合。 二、数据库的安装与配置安装 参照图解- 一路下一步 配置 参照图解 到选择字符集时停 登录Mysql1mysql -u root -p 卸载 停止mysql服务 net stop mysql (启动mysql服务 net start mysql) 卸载mysql 找到mysql 安装目录下的my.ini –&gt; datadir=&quot;C:/ProgramData/MySQL/MySQL Server 5.5/Data/&quot; 修改密码 Mysql 8.0修改mysql root用户密码 1ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY '你的密码'; Mysql 5.5修改mysql root用户密码 停止mysql服务 运行输入services.msc 停止mysql服务或者 cmd –&gt; net stop mysql 在cmd下 输入 mysqld --skip-grant-tables 启动服务器 光标不动 （不要关闭该窗口） 新打开cmd 输入mysql -u root -p 不需要密码use mysql;update user set password=password(&#39;abc&#39;) WHERE User=&#39;root&#39;; 关闭两个cmd窗口 在任务管理器结束mysqld 进程 在服务管理页面 重启mysql 服务密码修改完成。 三、sql概述SQL：Structure Query Language。（结构化查询语言） SQL被美国国家标准局（ANSI）确定为关系型数据库语言的美国标准，后来被国际化标准组织（ISO）采纳为关系数据库语言的国际标准。 各数据库厂商都支持ISO的SQL标准。普通话各数据库厂商在标准的基础上做了自己的扩展。方言 四、Sql的分类DD-（Data Definition Language）：数据定义语言，用来定义数据库对象：库、表、列等；create、 alter、 drop DM-（Data Manipulation Language）：数据操作语言，用来定义数据库记录（数据）； insert、 update、 delete DCL（Data Control Language）：数据控制语言，用来定义访问权限和安全级别； DQ-（Data Query Language）：数据查询语言，用来查询记录（数据）。select 注意：sql语句以 ; 结尾 4.1 DDL(create、 alter、 drop):操作数据库、表、列等使用的关键字：create、 alter、 drop 4.1.1操作数据库 -创- 123create database mydb1;Create database mydb2 character set gbk;Create database mydb3 character set gbk COLLATE gbk_chinese_ci; -查- 查看当前数据库服务器中的所有数据库 1show databases; 查看前面创建的mydb2数据库的定义信息 1Show create database mydb2; 删除前面创建的mydb3数据库 1Drop database mydb3; -修- 查看服务器中的数据库，并把mydb2的字符集修改为utf8; 1alter database mydb2 character set utf8; -删- 1drop database mydb3; 查看当前使用的数据库 1select database(); 切换数据库 1use mydb2; 4.1.2操作数据表12345678910111213141516171819语法： create table 表名( 字段1 字段类型, 字段2 字段类型, ... 字段n 字段类型 );常用数据类型： int：整型 double：浮点型，例如double(5,2)表示最多5位，其中必须有2位小数，即最大值为999.99； char：固定长度字符串类型； char(10) 'abc ' varchar：可变长度字符串类型；varchar(10) 'abc' text：字符串类型; blob：字节类型； date：日期类型，格式为：yyyy-MM-dd； time：时间类型，格式为：hh:mm:ss timestamp：时间戳类型 yyyy-MM-dd hh:mm:ss 会自动赋值 datetime:日期时间类型 yyyy-MM-dd hh:mm:ss 当前数据库中的所有表 1SHOW TABLES; 查看表的字段信息 1DESC employee; 在上面员工表的基本上增加一个image列。 1ALTER TABLE employee ADD image blob; 修改job列，使其长度为60。 1ALTER TABLE employee MODIFY job varchar(60); 删除image列,一次只能删一列。 1ALTER TABLE employee DROP image; 表名改为user。 1RENAME TABLE employee TO user; 查看表格的创建细节 1SHOW CREATE TABLE user; 修改表的字符集为gbk 1ALTER TABLE user CHARACTER SET gbk; 列名name修改为username 1ALTER TABLE user CHANGE name username varchar(100); 删除表 1DROP TABLE user ; 4.2 DML操作(重要)查询表中的所有数据 1SELECT- FROM 表名; DML是对表中的数据进行增、删、改的操作。不要与DDL混淆了。 1INSERT 、UPDATE、 DELETE 小知识：在mysql中，字符串类型和日期类型都要用单引号括起来。’tom’ ‘2015-09-04’空值：null 4.2.1插入操作：INSERT1语法： INSERT INTO 表名（列名1，列名2 ...）VALUES(列值1，列值2...); 注意：列名与列值的类型、个数、顺序要一一对应。可以把列名当做java中的形参，把列值当做实参。值不要超出列定义的长度。如果插入空值，请使用null插入的日期和字符一样，都使用引号括起来。 练习 ：注意不要写错啊 123456789101112131415161718192021222324create table emp(id int,name varchar(100),gender varchar(10),birthday date,salary float(10,2),entry_date date,resume text);INSERT INTO emp(id,name,gender,birthday,salary,entry_date,resume)VALUES(1,'zhangsan','female','1990-5-10',10000,'2015-5-5-','good girl');INSERT INTO emp(id,name,gender,birthday,salary,entry_date,resume)VALUES(2,'lisi','male','1995-5-10',10000,'2015-5-5','good boy');INSERT INTO emp(id,name,gender,birthday,salary,entry_date,resume)VALUES(3,'wangwu','male','1995-5-10',10000,'2015-5-5','good boy');批量插入：INSERT INTO emp VALUES(4,'zs','m','2015-09-01',10000,'2015-09-01',NULL),(5,'li','m','2015-09-01',10000,'2015-09-01',NULL),(6,'ww','m','2015-09-01',10000,'2015-09-01',NULL); 4.2.2 修改操作 UPDATE1语法：UPDATE 表名 SET 列名1=列值1，列名2=列值2 。。。 WHERE 列名=值 练习：将所有员工薪水修改为5000元。 1UPDATE emp SET salary=5000 将姓名为’zs’的员工薪水修改为3000元。 1UPDATE emp SET salary=3000 WHERE name=’ zhangsan’; 将姓名为’aaa’的员工薪水修改为4000元,job改为ccc。 1UPDATE emp SET salary=4000,gender='female' WHERE name='lisi'; 将wu的薪水在原有基础上增加1000元。 1UPDATE emp SET salary=salary+1000 WHERE gender='male'; 4.2.3 删除操作 DELETE: 1语法 ： DELETE FROM 表名 【WHERE 列名=值】 练习 ：删除表中名称为’zs’的记录。对于数据表的增删改查都有values,from,set,from 1DELETE FROM emp WHERE name=‘zs’; 删除表中所有记录。 1DELETE FROM emp; 使用truncate删除表中记录。 1TRUNCATE TABLE emp; DELETE 删除表中的数据，表结构还在;删除后的数据可以找回TRUNCATE 删除是把表直接DROP掉，然后再创建一个同样的新表。删除的数据不能找回。执行速度比DELETE快。 4.3 DQL操作DQL数据查询语言 （重要）数据库执行DQL语句不会对数据进行改变，而是让数据库发送结果集给客户端。查询返回的结果集是一张虚拟表。 查询关键字：SELECT语法： SELECT 列名 FROM表名 1【WHERE --&gt; GROUP BY --&gt;HAVING--&gt; ORDER BY】 语法： 1234567SELECT selection_list -要查询的列名-/ FROM table_list -要查询的表名-/ WHERE condition -行条-/ GROUP BY grouping_columns -对结果分-/ HAVING condition -分组后的行条-/ ORDER BY sorting_columns -对结果分-/ LIMIT offset_start, row_count -结果限-/ 创建名： 123456学生表：stu字段名称 字段类型 说明sid char(6) 学生学号sname varchar(50) 学生姓名age int 学生年龄gender varchar(50) 学生性别 1234567891011121314151617CREATE TABLE stu ( sid CHAR(6), sname VARCHAR(50), age INT, gender VARCHAR(50));INSERT INTO stu VALUES('S_1001', 'liuYi', 35, 'male');INSERT INTO stu VALUES('S_1002', 'chenEr', 15, 'female');INSERT INTO stu VALUES('S_1003', 'zhangSan', 95, 'male');INSERT INTO stu VALUES('S_1004', 'liSi', 65, 'female');INSERT INTO stu VALUES('S_1005', 'wangWu', 55, 'male');INSERT INTO stu VALUES('S_1006', 'zhaoLiu', 75, 'female');INSERT INTO stu VALUES('S_1007', 'sunQi', 25, 'male');INSERT INTO stu VALUES('S_1008', 'zhouBa', 45, 'female');INSERT INTO stu VALUES('S_1009', 'wuJiu', 85, 'male');INSERT INTO stu VALUES('S_1010', 'zhengShi', 5, 'female');INSERT INTO stu VALUES('S_1011', 'xxx', NULL, NULL); 雇员表：emp 123456789字段名称 字段类型 说明empno int 员工编号ename varchar(50) 员工姓名job varchar(50) 员工工作mgr int 领导编号hiredate date 入职日期sal decimal(7,2) 月薪comd ecimal(7,2) 奖金deptno int 部分编号 123456789101112131415161718192021222324CREATE TABLE emp( empno INT, ename VARCHAR(50), job VARCHAR(50), mgr INT, hiredate DATE, sal DECIMAL(7,2), comm decimal(7,2), deptno INT) ;INSERT INTO emp values(7369,'SMITH','CLERK',7902,'1980-12-17',800,NULL,20);INSERT INTO emp values(7499,'ALLEN','SALESMAN',7698,'1981-02-20',1600,300,30);INSERT INTO emp values(7521,'WARD','SALESMAN',7698,'1981-02-22',1250,500,30);INSERT INTO emp values(7566,'JONES','MANAGER',7839,'1981-04-02',2975,NULL,20);INSERT INTO emp values(7654,'MARTIN','SALESMAN',7698,'1981-09-28',1250,1400,30);INSERT INTO emp values(7698,'BLAKE','MANAGER',7839,'1981-05-01',2850,NULL,30);INSERT INTO emp values(7782,'CLARK','MANAGER',7839,'1981-06-09',2450,NULL,10);INSERT INTO emp values(7788,'SCOTT','ANALYST',7566,'1987-04-19',3000,NULL,20);INSERT INTO emp values(7839,'KING','PRESIDENT',NULL,'1981-11-17',5000,NULL,10);INSERT INTO emp values(7844,'TURNER','SALESMAN',7698,'1981-09-08',1500,0,30);INSERT INTO emp values(7876,'ADAMS','CLERK',7788,'1987-05-23',1100,NULL,20);INSERT INTO emp values(7900,'JAMES','CLERK',7698,'1981-12-03',950,NULL,30);INSERT INTO emp values(7902,'FORD','ANALYST',7566,'1981-12-03',3000,NULL,20);INSERT INTO emp values(7934,'MILLER','CLERK',7782,'1982-01-23',1300,NULL,10); 部分表：dept 1234字段名称 字段类型 说明deptno int 部分编码dname varchar(50) 部分名称loc varchar(50) 部分所在地点 123456789CREATE TABLE dept( deptno INT, dname varchar(14), loc varchar(13));INSERT INTO dept values(10, 'ACCOUNTING', 'NEW YORK');INSERT INTO dept values(20, 'RESEARCH', 'DALLAS');INSERT INTO dept values(30, 'SALES', 'CHICAGO');INSERT INTO dept values(40, 'OPERATIONS', 'BOSTON'); 1 基础查询1.1 查询所有列 1SELECT- FROM stu; 1.2 查询指定列 1SELECT sid, sname, age FROM stu; 2 条件查询2.1 条件查询介绍条件查询就是在查询时给出WHERE子句，在WHERE子句中可以使用如下运算符及关键字： =、!=、&lt;&gt;、&lt;、&lt;=、&gt;、&gt;=； BETWEEN…AND； IN(set)； IS NULL； IS NOT NULL AND； OR； NOT； 2.2 查询性别为女，并且年龄50的记录 12 SELECT- FROM stuWHERE gender='female' AND ge&lt;50; 2.3 查询学号为S_1001，或者姓名为liSi的记录 12SELECT- FROM stuWHERE sid ='S_1001' OR sname='liSi'; 2.4 查询学号为S_1001，S_1002，S_1003的记录 12SELECT- FROM stuWHERE sid IN ('S_1001','S_1002','S_1003'); 2.5 查询学号不是S_1001，S_1002，S_1003的记录 12SELECT- FROM tab_studentWHERE s_number NOT IN ('S_1001','S_1002','S_1003'); 2.6 查询年龄为null的记录 12SELECT- FROM stuWHERE age IS NULL; 2.7 查询年龄在20到40之间的学生记录 1234567SELECT-FROM stuWHERE age&gt;=20 AND age&lt;=40;或者SELECT-FROM stuWHERE age BETWEEN 20 AND 40; 2.8 查询性别非男的学生记录 1234567891011SELECT-FROM stuWHERE gender!='male';或者SELECT-FROM stuWHERE gender&lt;&gt;'male';或者SELECT-FROM stuWHERE NOT gender='male'; 2.9 查询姓名不为null的学生记录 1234567SELECT-FROM stuWHERE sname IS NOT NULL;或者SELECT-FROM stuWHERE NOT sname IS NULL; 3 模糊查询当想查询姓名中包含a字母的学生时就需要使用模糊查询了。模糊查询需要使用关键字LIKE。通配符:_ 任意一个字符 %：任意0~n个字符 1'%张%' '张_' 3.1 查询姓名由5个字母构成的学生记录 123SELECT-FROM stuWHERE sname LIKE '_____'; 模糊查询必须使用LIKE关键字。其中 “_”匹配任意一个字母，5个“_”表示5个任意字母。 3.2 查询姓名由5个字母构成，并且第5个字母为“i”的学生记录 123SELECT-FROM stuWHERE sname LIKE '____i'; 3.3 查询姓名以“z”开头的学生记录 1234SELECT-FROM stuWHERE sname LIKE 'z%';其中“%”匹配0~n个任何字母。 3.4 查询姓名中第2个字母为“i”的学生记录 123SELECT-FROM stuWHERE sname LIKE '_i%'; 3.5 查询姓名中包含“a”字母的学生记录 123SELECT-FROM stuWHERE sname LIKE '%a%'; 4 字段控制查询4.1 去除重复记录去除重复记录（两行或两行以上记录中系列的上的数据都相同），例如emp表中sal字段就存在相同的记录。当只查询emp表的sal字段时，那么会出现重复记录，那么想去除重复记录，需要使用DISTINCT： 1SELECT DISTINCT sal FROM emp; 4.2 查看雇员的月薪与佣金之和 因为sal和comm两列的类型都是数值类型，所以可以做加运算。如果sal或comm中有一个字段不是数值类型，那么会出错。 1SELECT-,sal+comm FROM emp; comm列有很多记录的值为NULL，因为任何东西与NULL相加结果还是NULL，所以结算结果可能会出现NULL。下面使用了把NULL转换成数值0的函数IFNULL： 1SELECT-,sal+IFNULL(comm,0) FROM emp; 4.3 给列名添加别名在上面查询中出现列名为sal+IFNULL(comm,0)，这很不美观，现在我们给这一列给出一个别名，为total： 1SELECT-, sal+IFNULL(comm,0) AS total FROM emp; 给列起别名时，是可以省略AS关键字的： 1SELECT-,sal+IFNULL(comm,0) total FROM emp; 5 排序 order by 列名 asc(默认) desc5.1 查询所有学生记录，按年龄升序排序 1234567SELECT-FROM stuORDER BY sage ASC;或者SELECT-FROM stuORDER BY sage; 5.2 查询所有学生记录，按年龄降序排序 123SELECT-FROM stuORDER BY age DESC; 5.3 查询所有雇员，按月薪降序排序，如果月薪相同时，按编号升序排序 12SELECT- FROM empORDER BY sal DESC,empno ASC; 6 聚合函数 sum avg max min count聚合函数是用来做纵向运算的函数： COUNT()：统计指定列不为NULL的记录行数； MAX()：计算指定列的最大值，如果指定列是字符串类型，那么使用字符串排序运算； MIN()：计算指定列的最小值，如果指定列是字符串类型，那么使用字符串排序运算； SUM()：计算指定列的数值和，如果指定列类型不是数值类型，那么计算结果为0； AVG()：计算指定列的平均值，如果指定列类型不是数值类型，那么计算结果为0； 6.1 COUNT当需要纵向统计时可以使用COUNT()。 查询emp表中记录数：SELECT COUNT-) AS cnt FROM emp; 查询emp表中有佣金的人数： 1SELECT COUNT(comm) cnt FROM emp; 注意，因为count()函数中给出的是comm列，那么只统计comm列非NULL的行数。 查询emp表中月薪大于2500的人数： 12SELECT COUNT-) FROM empWHERE sal &gt; 2500; 统计月薪与佣金之和大于2500元的人数： 1SELECT COUNT-) AS cnt FROM emp WHERE sal+IFNULL(comm,0) &gt; 2500; 查询有佣金的人数，有领导的人数： 1SELECT COUNT(comm), COUNT(mgr) FROM emp; 6.2 SUM和AVG当需要纵向求和时使用sum()函数。 查询所有雇员月薪和： 1SELECT SUM(sal) FROM emp; 查询所有雇员月薪和，以及所有雇员佣金和： 1SELECT SUM(sal), SUM(comm) FROM emp; 查询所有雇员月薪+佣金和 1SELECT SUM(sal+IFNULL(comm,0)) FROM emp; 统计所有员工平均工资： 1SELECT AVG(sal) FROM emp; 6.3 MAX和MIN 查询最高工资和最低工资： 1SELECT MAX(sal), MIN(sal) FROM emp; 7 分组查询 当需要分组查询时需要使用GROUP BY子句，例如查询每个部门的工资和，这说明要使用部门来分组。注：凡和聚合函数同时出现的列名，一定要写在group by 之后 7.1 分组查询 查询每个部门的部门编号和每个部门的工资和： 123SELECT deptno, SUM(sal)FROM empGROUP BY deptno; 查询每个部门的部门编号以及每个部门的人数： 123SELECT deptno,COUNT-)FROM empGROUP BY deptno; 查询每个部门的部门编号以及每个部门工资大于1500的人数： 1234SELECT deptno,COUNT-)FROM empWHERE sal&gt;1500GROUP BY deptno; 7.2 HAVING子句 查询工资总和大于9000的部门编号以及工资和： 1234SELECT deptno, SUM(sal)FROM empGROUP BY deptnoHAVING SUM(sal) &gt; 9000; 注：having与where的区别: 1.having是在分组后对数据进行过滤. where是在分组前对数据进行过滤2.having后面可以使用聚合函数(统计函数) where后面不可以使用聚合函数。 WHERE是对分组前记录的条件，如果某行记录没有满足WHERE子句的条件，那么这行记录不会参加分组；而HAVING是对分组后数据的约束。 8 LIMIT 方言LIMIT用来限定查询结果的起始行，以及总行数。 8.1 查询5行记录，起始行从0开始 1SELECT- FROM emp LIMIT 0, 5; 注意，起始行从0开始，即第一行开始！ 8.2 查询10行记录，起始行从3开始 1SELECT- FROM emp LIMIT 3, 10; 8.3 分页查询如果一页记录为10条，希望查看第3页记录应该怎么查呢？ 第一页记录起始行为0，一共查询10行； 第二页记录起始行为10，一共查询10行； 第三页记录起始行为20，一共查询10行； 8.3 查询代码的书写顺序和执行顺序 查询语句书写顺序：select – from- where- group by- having- order by-limit查询语句执行顺序：from - where -group by - having - select - order by-limit","raw":null,"content":null,"categories":[],"tags":[{"name":"博客","slug":"博客","permalink":"http://yoursite.com/tags/博客/"},{"name":"mysql","slug":"mysql","permalink":"http://yoursite.com/tags/mysql/"}]},{"title":"生活小技巧","slug":"生活小技巧","date":"2019-09-27T11:48:11.000Z","updated":"2019-10-07T07:28:31.490Z","comments":true,"path":"2019/09/27/生活小技巧/","link":"","permalink":"http://yoursite.com/2019/09/27/生活小技巧/","excerpt":"\n","text":"下载音乐下载：","raw":null,"content":null,"categories":[],"tags":[{"name":"随笔","slug":"随笔","permalink":"http://yoursite.com/tags/随笔/"},{"name":"小技巧","slug":"小技巧","permalink":"http://yoursite.com/tags/小技巧/"}]},{"title":"探索vs code","slug":"探索vs-code","date":"2019-09-27T04:00:22.000Z","updated":"2019-09-27T04:12:37.230Z","comments":true,"path":"2019/09/27/探索vs-code/","link":"","permalink":"http://yoursite.com/2019/09/27/探索vs-code/","excerpt":"\n","text":"vs code提高效率有效方法 导航栏中的U和M","raw":null,"content":null,"categories":[],"tags":[{"name":"博客","slug":"博客","permalink":"http://yoursite.com/tags/博客/"},{"name":"vs code","slug":"vs-code","permalink":"http://yoursite.com/tags/vs-code/"}]},{"title":"使用docsify写自己的电子书","slug":"使用docsify写自己的电子书","date":"2019-09-26T05:25:28.000Z","updated":"2019-10-08T17:13:58.205Z","comments":true,"path":"2019/09/26/使用docsify写自己的电子书/","link":"","permalink":"http://yoursite.com/2019/09/26/使用docsify写自己的电子书/","excerpt":"  \n","text":"使用docsify写自己的电子书 docsify是什么样的 需要什么工具 在Github Page使用docsify 开始用docsify写电子书 补充 使用docsify写自己的电子书docsify是什么样的首先我们先通过几个网站初步认识一下docsify,我们不用理会内容，只看外观: docsify Snipaste 《区块链系统实现》简介 如果你想写成像上面的文档、笔记、博客等，那么docsify是一个不错的选择。 那么如果你想这么做，那么继续往下看吧。 docsify官方使用手册 需要什么工具 我们可以选择将电子书寄放在Github上，所以首先需要注册一个GitHub账号。 通过以下命令安装docsify-cli 1npm i docsif-cli -g 在Github Page使用docsify生成自己的电子书网站很简单： Github Page是一个托管在Github的静态页面，可以作为你的仓库的说明文档。 docsify同样也可以作为说明文档的一个工具来使用。他的主要作用在于使界面很美观（可以使Github Page变得更加美观，正如我们上面看过的例子一样）。 通过Github的io仓库（http://&lt;username&gt;.github.io），我们就可以访问自己的网站。 综上：我们用Github的io仓库（http://&lt;username&gt;.github.io）来生成我们自己的网站，然后用docsify美化Github Page,这样子我们通过Github的io仓库（http://&lt;username&gt;.github.io）访问Github Page就可以达到访问自己电子书的目的了。 以下是实现的具体步骤: 在Github创建一个新的仓库 将该仓库git clone --到本地 进入到克隆下来的文件夹里面 用docsify init docs创造docs文件夹，初始化docsify 使用以下命令 123git add .git commit -m \"init docsify\"git push 通过上面命令，我们就将本地的更新内容推送到远端仓库了 在该仓库找到以下内容：seting -&gt; Github Page 这样子我们就可以通过上面的网址,就能访问我们的电子书网站了（可能得等10多20分钟~网页没有那么快可以刷新） 开始用docsify写电子书docsify的官方文档写的很详细，推荐看。 docsify官方使用手册 根据docsify的官方文档，文件的修改如下: index.html（主要更改主页的基本样式） 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596&lt;!DOCTYPE html&gt;&lt;html lang=\"en\"&gt;&lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;title&gt;Document&lt;/title&gt; &lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" /&gt; &lt;meta name=\"description\" content=\"Description\"&gt; &lt;meta name=\"viewport\" content=\"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0\"&gt; &lt;!-- themes --&gt; &lt;link rel=\"stylesheet\" href=\"//unpkg.com/docsify/lib/themes/vue.css\" /&gt; &lt;!-- &lt;link rel=\"stylesheet\" href=\"//unpkg.com/docsify/themes/dark.css\"&gt; --&gt; &lt;!-- A docsify plugin that copies Markdown code block to your clipboard. --&gt; &lt;!-- But it is not work? --&gt; &lt;script src=\"https://unpkg.com/docsify-copy-code@2\"&gt;&lt;/script&gt; &lt;/head&gt;&lt;body&gt; &lt;!-- 左上角 中英文切换 --&gt; &lt;nav&gt; &lt;a href=\"#/\"&gt;EN&lt;/a&gt; &lt;a href=\"#/zh-cn/\"&gt;中文&lt;/a&gt; &lt;/nav&gt; &lt;!-- 加载时显示的内容 --&gt; &lt;div id=\"app\"&gt;loading···😊&lt;/div&gt; &lt;script&gt; window.$docsify = &#123; //👆封面 coverpage: true, // multiple covers // coverpage: ['/', '/zh-cn/'], //打开默认的主页 // homepage: 'guide.md', //主色调 // themeColor: '#3F51B5' //标题 name: 'Leetcode Notes', // nameLink: '/', //👈左边导航栏 loadSidebar: true, autoHeader: true, // maxLevel: 3, subMaxLevel: 3, //👉右上面导航栏 loadNavbar: true, mergeNavbar: true, //👉绿色小猫跳转到GitHub repo: 'https://github.com/floatLig/DoLeetcode', //不知道是什么东西~ alias: &#123; '/.*/_sidebar.md': '/_sidebar.md' &#125;, //不知道有什么用 auto2top: true, //👇用于跳转，但是好像没用？ pagination: &#123; previousText: '上一章节', nextText: '下一章节', crossChapter: true &#125;, // 用于复制粘贴，但是好像没用? docsify-copy-code (defaults) copyCode: &#123; buttonText : 'Copy to clipboard', errorText : 'Error', successText: 'Copied' &#125; &#125; &lt;/script&gt; &lt;!-- docsify --&gt; &lt;script src=\"//unpkg.com/docsify/lib/docsify.min.js\"&gt;&lt;/script&gt; &lt;!-- java高亮 --&gt; &lt;script src=\"//unpkg.com/prismjs/components/prism-java.js\"&gt;&lt;/script&gt; &lt;script src=\"//unpkg.com/prismjs/components/prism-java.min.js\"&gt;&lt;/script&gt; &lt;!-- plugins --&gt; &lt;!-- 试一下【:100:】 --&gt; &lt;script src=\"//unpkg.com/docsify/lib/plugins/emoji.min.js\"&gt;&lt;/script&gt; &lt;!-- 调整图片大小【':size=50x100'】 --&gt; &lt;script src=\"//unpkg.com/docsify/lib/plugins/zoom-image.min.js\"&gt;&lt;/script&gt; &lt;!-- 👇用于跳转下一章，但是好像没用？ --&gt; &lt;script src=\"../dist/docsify-pagination.js\"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt; _coverpage.md（👆封面的设置） 12345678910111213141516171819202122&lt;!-- _coverpage.md --&gt;😃## Leetcode Notes&lt;small&gt;1.0&lt;/small&gt;&lt;!-- &gt; A magical documentation site generator. --&gt;&lt;!-- &gt; Now choose, so love. --&gt;- Recode the reflections of leetcode quesitons.- Beginning September 26,2019- Using docsify&lt;!-- Link --&gt;[GitHub](https://github.com/floatLig/DoLeetcode)&lt;!-- [Get Started](#docsify) --&gt;&lt;!-- background image --&gt;&lt;!-- ![](_media/bg.png) --&gt;&lt;!-- background color --&gt;&lt;!-- ![color](#f0f0f0) --&gt; 样式如下： _sidebar.md (👈导航栏的设置) 12345678&lt;!-- docs/_sidebar.md --&gt;&lt;!-- 左边导航栏 --&gt;- SidebarTest - [Home](/) - [Guide](guide.md \"the greatest guide in the world\"0) 样式如下： _navbar.md (👉导航栏的设置) 123456789101112131415161718&lt;!-- _navbar.md --&gt;&lt;!-- _navbar.md --&gt;&lt;!-- 大目录一 --&gt;* Getting started * [Quick start](quickstart.md) * [Writing more pages](more-pages.md) * [Custom navbar](custom-navbar.md) * [Cover page](cover.md)&lt;!-- 大目录二 --&gt;* Configuration * [Configuration](configuration.md) * [Themes](themes.md) * [Using plugins](plugins.md) * [Markdown configuration](markdown.md) * [Language highlight](language-highlight.md) 样式如下： guide.md (docsify常用格式) 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657&lt;!-- 第一个大标题应为\"guide.md\"中的guide,在导航栏中不显示 --&gt;# Guide&lt;!-- 不在导航栏显示该标题 --&gt;# guide &#123;docsify-ignore&#125;## Header### GUIDE3&lt;!-- 重要提示 --&gt;!&gt; **Time** is money, my friend!&lt;!-- 一般提示 --&gt;?&gt; _TODO_ unit testTODO unit test&lt;!-- :ignore -&gt; 忽略格式:target=_blank -&gt; 在新窗口打开:target=_self -&gt; 更新本窗口的显示页内容 --&gt;[link](/demo/) [link](/demo/ ':ignore') [link](/demo ':target=_blank') [link](/demo2 ':target=_self') &lt;!-- - [ ] 注意有空格，没打勾- [×] 显示打勾 --&gt;- [ ] foo- bar- [x] baz- [ ] bam &lt;~ not working - [ ] bim - [ ] lim&lt;!-- 设置格式大小 【':size=50x100'】--&gt;![logo](https://docsify.js.org/_media/icon.svg ':size=50x100')![logo](https://docsify.js.org/_media/icon.svg )&lt;!-- 设置id --&gt;### 你好，世界！ :id=hello-world&lt;!-- 下拉举例 --&gt;&lt;details&gt;&lt;summary&gt;Self-assessment (Click to expand)&lt;/summary&gt;- Abc- Abc&lt;/details&gt;&lt;!-- emoji举例 --&gt;:100: 补充 添加代码高亮","raw":null,"content":null,"categories":[],"tags":[{"name":"博客","slug":"博客","permalink":"http://yoursite.com/tags/博客/"},{"name":"docsify","slug":"docsify","permalink":"http://yoursite.com/tags/docsify/"}]},{"title":"hexo+思维导图+极客时间+docsify+githubPage+知识地图","slug":"hexo-思维导图-极客时间-docsify-githubPage-知识地图","date":"2019-09-26T04:41:12.000Z","updated":"2019-10-08T17:13:58.205Z","comments":true,"path":"2019/09/26/hexo-思维导图-极客时间-docsify-githubPage-知识地图/","link":"","permalink":"http://yoursite.com/2019/09/26/hexo-思维导图-极客时间-docsify-githubPage-知识地图/","excerpt":"\n","text":"hexo常用命令 思维导图Mindmanager docsify githubPage 知识地图 hexo常用命令 在vs code中用终端命令，创建新的博客 1hexo n &quot;博客名字&quot; 本地演示：(推荐先用本地演示查看效果，等所有的效果确定后再一次性推送到远端) 1234hexo s//或者hexo serve//在终端摁下Ctrl+C退出本地演示 部署到远端（自己是部署到github的个人仓库） 123hexo clean &amp;&amp; hexo d//或者hexo clean &amp;&amp; hexo deploy 思维导图Mindmanager Mindmanager软件的破解文件在网盘里面有 在菜单栏中-发布-开始新的发布 可以在Mindmanager服务器上访问你发布的内容 docsify 开始用docsify写电子书 docsify常用命令: docsify:初始化（创建）docs文件夹 1docsify init docs docsify:本地预览 1docsify serve docs 用git部署到GitHub Page上 123git add .git commit -m &quot;init docsify&quot;git push githubPage 在你的仓库下-&gt;setting下 知识地图","raw":null,"content":null,"categories":[],"tags":[{"name":"工作空间","slug":"工作空间","permalink":"http://yoursite.com/tags/工作空间/"},{"name":"博客","slug":"博客","permalink":"http://yoursite.com/tags/博客/"}]},{"title":"写给则灿","slug":"写给则灿","date":"2019-09-22T14:14:23.000Z","updated":"2019-10-07T06:18:53.910Z","comments":true,"path":"2019/09/22/写给则灿/","link":"","permalink":"http://yoursite.com/2019/09/22/写给则灿/","excerpt":"\n","text":"错题本错题本有用吗如果不总结，就可以能在这道题会错第2遍、第3遍。 如何做错题本想说的话是，希望则灿能够在我已经走过的路上，探索更遥远的未来。 暑假开始学编程，然后ACM？或者PS/Office，不要去打暑假工。学车。性格培训？或者美体其中一种。 暑假要开始了解学校的情况：同乡会优秀的人、快毕业的师兄师姐。以及在大学你需要知道的奖学金、保研、学习、项目等等这些情况。 开学后，选择一个复利的部门。像筑梦那样子，毕业后可以聚集在一起，而不是像同乡会、市拓那样子就散了。 找一份兼职，或是勤工俭学/最好是奶茶店、肯德基、家教这些，但是只局限于你大一去做。 然后大一要吸收我的所有东西，学习方法，搜索，优点等等。 做好大学4年的初步规划，找准机会出国。去探索一下。","raw":null,"content":null,"categories":[],"tags":[{"name":"随笔","slug":"随笔","permalink":"http://yoursite.com/tags/随笔/"}]},{"title":"我的idea修炼之道","slug":"我的idea修炼之道","date":"2019-09-21T04:32:28.000Z","updated":"2019-10-08T17:13:58.204Z","comments":true,"path":"2019/09/21/我的idea修炼之道/","link":"","permalink":"http://yoursite.com/2019/09/21/我的idea修炼之道/","excerpt":"\n","text":"优秀文章参考 IDEA需要更改的配置 插件- [插件安装](#插件安装) - [插件大全](#插件大全) 智能补全 快捷键 优秀文章参考 微信公众号：Java技术栈 IntelliJ IDEA 快捷键终极大全 Intellij IDEA 2019 最新乱码解决必杀技 一文搞懂如何在Intellij IDEA中使用Debug Intellij IDEA 智能补全的 10 个姿势 IDEA一定要改的8条配置 看源码，我为什么推荐IDEA? 精选提高开发效率的15个idea插件 IDEA需要更改的配置插件插件安装IntelliJ IDEA的插件安装很简单。在File–Setting中找到下面的界面： 插件大全Key promoter X: Key promoter X这款插件适合新手使用。当你鼠标点击一个功能的时候，可以提示你这个操作的快捷键是什么。这样子，你就可以很多熟悉这款软件的快捷功能了。有快捷键的，会提示你快捷键是什么，没有快捷键的，会提示你创建快捷键。 Alibaba Java Coding Guidelines: 阿里巴巴代码检查插件，当然规范可以参考阿里巴巴Java开发手册 ECtranslation: 中文翻译插件 智能补全1. 快速打印输出: sout : System.out.println(); 2. 快速定义局部变量: 快捷键 Alt+Insert 生成代码(如get,set方法,构造函数等) 或者右键（Generate） fori/sout + Tab Ctrl+Alt+T 生成try catch 或者 Alt+enter Ctrl + O 重写方法 （overide） Ctrl + I 实现方法（implement） CTRL+ALT+ left/right 前后导航编辑过的地方 Ctrl+Shift+上下键 上下移动代码","raw":null,"content":null,"categories":[],"tags":[{"name":"博客","slug":"博客","permalink":"http://yoursite.com/tags/博客/"},{"name":"IntelliJ IDEA","slug":"IntelliJ-IDEA","permalink":"http://yoursite.com/tags/IntelliJ-IDEA/"}]},{"title":"见贤思其焉，见不贤而内自省也","slug":"见贤思其焉，见不贤而内自省也","date":"2019-09-17T16:26:49.000Z","updated":"2019-10-07T07:28:31.489Z","comments":true,"path":"2019/09/18/见贤思其焉，见不贤而内自省也/","link":"","permalink":"http://yoursite.com/2019/09/18/见贤思其焉，见不贤而内自省也/","excerpt":"\n","text":"见贤思其焉zzz 说话：多说语音，压低声音~ 定义每天要做的目标，目标完成你就可以尽情玩耍！目标最好定位到一个星期后！ 文哥 你在帮助其他人的同时，也要记得保护好自己。比如你在算综测的时候，按照条例来，说条例没有这样子的内容，我们和老师协商一下等等。 说话要有条理性，分点来。比如在保研面试的时候，自我介绍按照要点来说，会很有条理性。 最坏的结局是什么，最好结局又是什么。不要怕，直接去做。 林贤 不懂就问咯，最坏的结束是啥？自己在进步，于人于己都是最好的结局。 家乐师兄 刷算法题：前100道要很透彻，做笔记，后面就能很快了。 仁迪 多看看文件，多了解内容，为以后做打算。大一正式上课就能够认识奖学金、考研等等这些，为目标做打算。 广辉 尊重他人。在选班干的时候，坐在第一排，很认真的听讲，点头示意等等。 树哥 如果你不知道什么路是对的，那么你就选择一条路出发，你会越走越清晰。关键是你要行动。 焕熙 自己唱过歌后，其实也是没什么。 见不贤而内自省也 遇到紧急的事绝对不能着急！紧急的事情已经发生了，稳下来才可以找到解决方法。【例如：我的电脑落在了理北，门被锁了，冷静下来】 很多事都要提前做好规划！比如牙齿矫正，至少都要一个星期预约。","raw":null,"content":null,"categories":[],"tags":[{"name":"随笔","slug":"随笔","permalink":"http://yoursite.com/tags/随笔/"},{"name":"目标","slug":"目标","permalink":"http://yoursite.com/tags/目标/"}]},{"title":"英语连读技巧","slug":"英语连读技巧","date":"2019-09-08T01:22:42.000Z","updated":"2019-10-08T17:13:58.203Z","comments":true,"path":"2019/09/08/英语连读技巧/","link":"","permalink":"http://yoursite.com/2019/09/08/英语连读技巧/","excerpt":"","text":"","raw":null,"content":null,"categories":[],"tags":[]},{"title":"我所爱的","slug":"我所爱的","date":"2019-09-07T03:57:03.000Z","updated":"2019-10-08T17:13:58.204Z","comments":true,"path":"2019/09/07/我所爱的/","link":"","permalink":"http://yoursite.com/2019/09/07/我所爱的/","excerpt":"\n","text":"有一个小小的梦想，带着家人一起去旅游！","raw":null,"content":null,"categories":[],"tags":[{"name":"随笔","slug":"随笔","permalink":"http://yoursite.com/tags/随笔/"}]},{"title":"搜索技巧&网站集合","slug":"搜索技巧","date":"2019-09-07T03:00:49.000Z","updated":"2019-10-08T17:13:58.205Z","comments":true,"path":"2019/09/07/搜索技巧/","link":"","permalink":"http://yoursite.com/2019/09/07/搜索技巧/","excerpt":"\n","text":"搜索指令 搜索网站 其他站点 搜索指令 “”：完全比配，举例：【”搜索技巧”】 A -B：搜索包含A但不包含B的结果（注意A后面有一个空格，-后面没有空格），举例：【搜索技巧 -百度】 ：模糊搜索，举例：【长城防\\墙】 搜索网站 虫部落快搜：https://search.chongbuluo.com/ 电子书搜索：https://ebook.chongbuluo.com/ dogedoge搜搜：https://www.dogedoge.com/ 其他站点 果壳任意门：http://www.gkbang.cn/link/ 一纳米学习：http://1nami.com/ 优设导航：https://hao.uisdc.com/","raw":null,"content":null,"categories":[],"tags":[{"name":"博客","slug":"博客","permalink":"http://yoursite.com/tags/博客/"}]},{"title":"我的学习方法","slug":"我的学习方法","date":"2019-09-04T15:28:52.000Z","updated":"2019-10-08T17:13:58.205Z","comments":true,"path":"2019/09/04/我的学习方法/","link":"","permalink":"http://yoursite.com/2019/09/04/我的学习方法/","excerpt":"\n","text":"1. 态度：不要等一切都准备好了再前行 2. 资料准备 3. 三遍学习法 4. 知识归纳整理 1. 态度：不要等一切都准备好了再前行如果把一切都准备好了再前行，那我们永远迈不出第一步 2. 资料准备Github知识点总结、Github书籍、极客时间、优秀书籍、视频 3. 三遍学习法先把书读薄：第一遍学习的时候，不要在意一砖一瓦，重视整体的架构，并总结出简略的知识地图再把书读厚：这个时候要很注重细节，把对应的知识点整理成Gitbook最后把书读薄：总结成自己知识地图，以后可以通过该知识地图快速的回忆起内容 做法： 第一遍： 极客时间–&gt;知识地图 课本–&gt;电子书 第二遍： 知识地图整理 极客时间第二遍 课本第二遍 自己说出来–&gt;讯飞输入法 知识地图 第三遍： 后面不断查漏补缺 4. 知识归纳整理 博客 docsify电子书/gitbook电子书 思维导图在线发布 知识地图","raw":null,"content":null,"categories":[],"tags":[{"name":"博客","slug":"博客","permalink":"http://yoursite.com/tags/博客/"}]},{"title":"认识我的人际关系","slug":"认识我的人际关系","date":"2019-09-04T06:18:14.000Z","updated":"2019-10-07T07:32:50.548Z","comments":true,"path":"2019/09/04/认识我的人际关系/","link":"","permalink":"http://yoursite.com/2019/09/04/认识我的人际关系/","excerpt":"\n","text":"社交分类 共情社交 功利社交 区分好共情社交和功利社交 在社交中，我们要怎么做 不要讨好别人 对事不对人 减少无关紧要的社交，重要的是提升自己 不要主动去得罪别人 后记 资料参考来源：传送门1 ; 传送门2 社交分类社交在本质上分为两种。一种是【共情社交】，一种是【功利社交】。 共情社交共情社交是指为了获得情感连结与情感体验，打发无聊，或是有共同的兴趣等而产生的社交行为。 这种社交不涉及利益交换，且多数人自小产生的社交行为都是源于这种共情类的需求。 随着一个人年龄的增长，他的共情社交会逐渐的减少；并且在同一年龄与阶层中，一个人的心智越成熟、能力越强、社会地位越高，他的共情社交就会越少。 上面所说的是一种趋势，无论是你，或者是你的朋友，都会这么做。大多数情况是：你的那些比你强的朋友默默地舍弃了你，而你也悄悄舍弃了那些比你弱地朋友。 所以最后我们就会看到，在生活那些越成熟、越独立的人就越是对共情社交不在乎。因为他们的人格和在社会上生存的能力足够完善，无论是感情还是物质，他们都不需要“朋友”来给他们提供支持。 但是不在乎，也并不代表优秀的人没有共情社交。 功利社交功利社交是指为了达成某一目的，或是从对方身上获得利益而产生的社交行为。 随着一个人心智的完善和社会地位的提升，他会越来越注重社交的【效益性】。即一段社交关系能带给他怎样的利益，和这个朋友继续交往有没有价值，甚至和一群老朋友一起吃饭还有没有必要。 功利社交有两个基本的前提： 一是“有效”信息的交互传递。（这个信息是广义的，在人机交往中的如语言、情感、物质、知识等都可以包括在这个信息的范畴内。） 沟通的本质就是信息的传递。而有效是功利性社交的一个基本要素。人们产生功利性社交行为之前基本上都是抱有一定目的性的，当我和你产生社交时，我们的交流应该是有价值的，而不是毫无意义的闲扯和浪费时间的各说各话。 二是较为“对等”的价值水平。这个价值水平不仅仅是指社会地位。他依据的是具体情况和个人的评判标准。 功利社交的根本目的就是能够从对方那里获得一定的利益或是得到帮助，如果一个人和你的差距极大，你很清除这个人在未来的生活中不可能给你带来丝毫的利益，那么这段社交关系对于你而言就是毫无意义的，所以你本能的就会舍弃。 区分好共情社交和功利社交我国的传统文化与社会观念一向是将公里社交和共情社交混为一谈。所以在中国【经营人脉】的方式就是【拉关系】，先和你套近乎，称为“朋友”以后再提出【功利性需求】，对方就不好意思再拒绝。 正是因为【中国式边界不清的社交】模式，才会令很多人迷信于“人脉管理”，“为人处世之道”，“社交技巧”等等这些无用的鸡汤。 所以我们应该意识到：对于【共情朋友】你只能理直气壮地向他提出情感类地需求。比如当你难过时，可以要求他陪伴你，当你无聊时，可以叫他一起玩，当你开心时，可以拉着他一起疯。 但是当我们设计到【功利性】的交际时，你应当按照【功利社交】的方式去你对方沟通。 所以这就意味着：当你的【共情朋友】向你提出超出边界的需求时你完全有百分之一百的权力拒绝他。 决定是否帮助他的选择权完全在你手上，你不应该为他的不幸或者问题负责，你也完全不需要再拒绝了朋友的请求时心怀内疚，而对方也完全没有任何的权力因为你不帮助他而指责你。 但是，具体情况要具体分析。由于功利社交中，还取决“较为对等的水平”，如果对方愿意分享，也能从分享中得到好处，或许我可以白嫖，但是，“同等价值交换”才是理所应当。（极端角度来说，你想白嫖，共情社交是前提，功利社交是目的） 在社交中，我们要怎么做不要讨好别人讨好起不到任何作用，讨好不会令别人喜欢上你，讨好不会令别人接受你，讨好不会令别人看的起你，讨好不会让别人愿意平白无故的帮你，讨好不会令别人有价值的信息透露给你。 你理解了社交的本质，你就理解了别人如何对待你最根本的是取决于你是谁，取决于你的价值，然后你还需要学会一种交际方式，你就能不卑不亢的和别人相处了。 对事不对人从你的角度而言，你要在和别人沟通时停止对别人人格或价值上的评判，而仅仅是阐述事实。 比如：小李你这个工作做得不好而不是小李这个人真没用。 同时，当一个人在于你沟通时总是对你做价值评判，或是借由一件事情攻击你、否定你，你应当意识到这绝对不意味着真的是你不好，而是对你做评判的人愚蠢且被情绪冲昏了头脑。 减少无关紧要的社交，重要的是提升自己当你的心智足够成熟/感觉自己在和一些朋友相处感觉很累/或者是你自己很清楚你不想再和某些人继续交往下去但是碍于面自又不好直接终结关系的时候，你应该直接总结这些关系。 在【提升自己的价值】是建立在【知道自己想要的是什么】的前提下。 只有当你知道自己想要什么，当你在做自己的时候，你才能遇到【真正】的朋友。 我自己想要什么： 好好学习，广度要深； 努力赚钱，爱对我最重要的人； 社交和朋友不重要并不是说我们就完全不需要这些，而是因为【朋友】和【良好的社交关系】是在你【做好自己】之后自然而然就会伴随而来。 不要主动去得罪别人我们永远记得在人际交往总一个最起码的原则是：不要主动去得罪别人。 后记独来独往也许只是一种选择罢了。为了想要得到的东西，其他所有的一切都是需要付出代价的。🙂🙂🙂","raw":null,"content":null,"categories":[],"tags":[{"name":"随笔","slug":"随笔","permalink":"http://yoursite.com/tags/随笔/"}]},{"title":"使用版本控制系统Git","slug":"使用版本控制系统Git","date":"2019-09-01T02:03:16.000Z","updated":"2019-10-08T17:13:58.204Z","comments":true,"path":"2019/09/01/使用版本控制系统Git/","link":"","permalink":"http://yoursite.com/2019/09/01/使用版本控制系统Git/","excerpt":"\n","text":"更多详细内容参考廖雪峰的Git教程 使用Git和GithubGit和GitHub怎么知道对方是谁呢？SSH充当这个桥梁的角色。 SSH的工作原理大致过程是：本地端生成公钥私钥；然后将本地端的公钥放到服务端。这样子初始化就完成了。当要登陆的时候，本地端发送一个请求到服务器；这时候服务器向本地端发送一个随机串，本地使用私钥加密随机串，返回加密后的随机串给服务端。服务端用公钥解密随机串，并且返回结果。 SSH详细原理1：https://www.jellythink.com/archives/555SSH详细原理2：http://www.ruanyifeng.com/blog/2011/12/ssh_remote_login.html 设置Git的user name和email 12git config --global user.name \"xxx\" git config --global user.email \"xxx@xxx.com\" 生成SSH 1ssh-keygen -t rsa -C \"xxx@xxx.com\" 将公钥添加到Github 123cd ~/.sshcat id_rsa.pub 将公钥复制到Github上 git—如何解决The authenticity of host ‘github.com (192.30.255.112)’ can’t be established. 测试能够访问 1ssh -T git@github.com Git的常用命令初始化git仓库，通过git init，会在文件下下面自动生成.git文件 $ git init 通过git add 文件名，把文件添加到仓库 $ git add readme.txt 通过git commit -m &quot;提交的说明&quot; $ git commit -m “xxx” 说明：为什么Git添加文件需要add,commit一共两步呢？因为commit可以一次提交很多文件，所以你可以多次add不同文件，比如： $ git add file1.txt$ git add file2.txt file3.txt$ git commit -m “add 3 files.” git status命令可以让我们时刻掌握仓库当前的状态 $ git status git diff 文件名命令可以让我们看看具体修改了什么内容 $ git diff readme.txt git log或者git log --pretty=oneline命令显示从最近到最远的提交日志,输入q退出去 $ git log&amp; git log –pretty=oneline 回退到上一个版本，使用git reset --hard HEAD^或者git reset -- hard HEAD-i $ git reset –hard HEAD^$ git reset –hard head~1$ git reset –hard 版本号 使用git reflog可以查看你的历史版本，配合git reset就可以相当于拥有了时光机了 git reflog","raw":null,"content":null,"categories":[],"tags":[{"name":"博客","slug":"博客","permalink":"http://yoursite.com/tags/博客/"},{"name":"Git","slug":"Git","permalink":"http://yoursite.com/tags/Git/"}]},{"title":"关于英语六级--loser","slug":"关于英语六级--loser","date":"2019-08-22T04:50:20.000Z","updated":"2019-10-07T07:28:31.591Z","comments":true,"path":"2019/08/22/关于英语六级--loser/","link":"","permalink":"http://yoursite.com/2019/08/22/关于英语六级--loser/","excerpt":"\n\n\n","text":"今天，是一个不是很开心的一天。 六级成绩可以查了，分数很低很低，380分。 是吧，成绩很低，那也是过去了，关键是能不能从中看到失败的原因。 这里对比一下我的四级成绩。 听力：165 -&gt; 119阅读：161 -&gt; 159写作和翻译：155 -&gt; 102 从成绩可以看出，三个模块都呈现了不同程度的下滑，其中听力和写作翻译都下滑了50+，这绝对是我下次的复习重点。 听力：平时就多听，选择热爱。 写作和翻译：多认识词汇，多写。关键应该还是翻译。 我复习阶段，其实很注重写作的训练，但是呢，结果适得其反，很大程度是因为我没有考前模拟练习，进行实战~ 不要假装努力！🙂","raw":null,"content":null,"categories":[],"tags":[{"name":"随笔","slug":"随笔","permalink":"http://yoursite.com/tags/随笔/"},{"name":"英语","slug":"英语","permalink":"http://yoursite.com/tags/英语/"}]},{"title":"搭建自己的博客","slug":"搭建自己的博客","date":"2019-08-21T02:36:00.000Z","updated":"2019-10-07T07:32:50.547Z","comments":true,"path":"2019/08/21/搭建自己的博客/","link":"","permalink":"http://yoursite.com/2019/08/21/搭建自己的博客/","excerpt":"\n","text":"部署环境 需要安装node.js （通过源码编译安装，注：这种方法用的时间是在是太久了(っ °Д °;)っ） 安装git 用cnpm安装hexo 如何初始化个人博客 如何写博客 如何把个人博客部署到远端 如何给个人博客换主题 遇到的其他问题 部署环境需要安装node.js （通过源码编译安装，注：这种方法用的时间是在是太久了(っ °Д °;)っ） 我们用root权限更新一下软件包管理器，输入下面命令后，再输入自己的root密码 sudo apt-get update 安装python，gcc,make,g++ ( 这一步需要下载的东西比较多，时间也会久一点，需要大概700M左右的流量 ) apt-get install python gcc make g++ 【建议不要按以下的方法装】然后接下来我们正式来安装node.js，首先我们来到node.js官网的下载专区，然后在下图中红框内，在标有Source Code上右键，复制下载链接 然后执行下载的命令,(下图的地址为Source Code的下载地址，大家根据刚刚复制的地址，粘贴进去) wget https://nodejs.org/dist/v10.16.3/node-v10.16.3.tar.gz 然后解压刚刚下载的Source Code tar -zxvf node-v10.16.3.tar.gz 进入到刚刚解压好的node-v10.16.3.tar.gz文件夹中 cd node-v10.16.3 然后进行“检测平台安装环境”，“编译”，“执行安装” (这里的make,make install要巨久(っ °Д °;)っ) ./configuremakesudo make install 上面的命令行跑完，node.js就安装好啦，这个时候我们来检验一下node.js是否安装好了 node -vnpm -v npm换淘宝的源cnpm，下载速度会快一点; npm install -g cnpm –registry=https://registry.npm.taobao.orgcnpm -v 安装git apt-get install gitgit –version 用cnpm安装hexo -g意思为全局安装 cnpm install -g hexo-clihexo -v 如何初始化个人博客 启动博客 s:start sudo hexo init（可能不需要）npm install hexo-serverhexo s 这个时候就可以在我们的浏览器打开hexo为我们生成的博客啦：http://localhost:4000/ 如何写博客 hexo n “我的第一篇博客.md” markdown写完之后,g为generate hexo cleanhexo ghexo s 如何把个人博客部署到远端 我们选择把博客部署到GitHub上面去，注册登录Github 新建一个io仓库，注意，仓库名的是唯一的，不能乱起。（因为我已经创建了，所以会显示警告） 在blog所在的位置安装一个git的插件 cnpm install –save hexo-deployer-git 然后需要在_config.yml增加一些属性 这个时候就可以将它部署到远端啦 hexo d 如何给个人博客换主题这里安装yilia的主题 把yilia主题clone到本地的 theme文件夹下的yilia文件夹中 clone https://github.com/litten/hexo-theme-yilia.git themes/yilia 然后同样的需要在_config.yml修改一些配置（将theme设置为yilia） 然后clean一下，generate一下，最后deploy一下，推到远端 hexo cleanhexo ghexo d 最后还对主题进行了一些修改,传送门 添加访问量，传送门 遇到的其他问题问题1： npm 安装参数中的 –save是什么意思？ 回答1： 当你为模块安装一个依赖模块时，我们通常得干这么些事 1. 在模块根目录下npm install module-name安装依赖模块 2. 然后将下载的依赖模块版本号等信息添加到模块配置文件package.json中的依赖里（dependencies） 而--save和--save-dev可以省掉你手动修改package.json文件的步骤spm install module-name -save 自动把模块和版本号添加到dependencies部分spm install module-name -save-dve 自动把模块和版本号添加到devdependencies部分 问题2： hexo搭建博客过程中出现4000端口被占用 解答2： 一般情况下，4000端口被占用是因为你开了多个终端，或许你在另一个终端使用了4000端口，你目前正在编辑的终端也是用4000端口；解决方法为：关闭其中一个终端 另一种解决方法为：使用新的端口打开Hexo，操作为在_config.yml内加上如下代码，从而更改hexo-server运行时的端口号： 1234server: port: 4001 compress: true header: true 问题3：can not read a block mapping entry; a multiline key may not be an implicit key at line 78, column 1: 解答3： 无法读取块映射条目；多行键可能不是隐式键；出现这种情况很有可能是修改_config.yml不规范造成的，你要很注意“：”后面有一个空格 问题4/解答4： 在hexo init初始化中，出现git的一些错误，怎么解决都无济于事；最后重装了git就成功了 问题5/解答5： 在删除blog文件夹时，出现需要“××权限”才能删除，有可能是因为你vs code打开了它 (＃°Д°) 问题6/解答6： win + R，切换到D盘： D: 问题7： Hexo常用的命令 解答7: 启动本地服务器，用于预览主题。默认地址：http://localhost:4000/ (下面两条的命令效果一样，下同) hexo shexo server 新建一个新文件，默认为md格式 hexo new “new article”hexo “new article” 自动生成网站静态文件，并部署到设定的仓库 hexo dhexo deploy 清除缓存db.json和已生成的静态文件public hexo clean 常用组合 hexo clean &amp;&amp; hexo shexo clean &amp;&amp; hexo d 体会: 不要怕！有虚拟机！错了干掉重来！ 打命令行，慢一点，可以的 写博客真的可以让自己体会更多！最后再做一个知识地图和总结，真的很完美！ 出现问题：看错误信息 –&gt; 打印一些辅助信息 –&gt; Degug –&gt; 网上查","raw":null,"content":null,"categories":[],"tags":[{"name":"博客","slug":"博客","permalink":"http://yoursite.com/tags/博客/"}]}]}